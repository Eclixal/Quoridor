<project name="Quoridor" default="dist" basedir=".">
    <description>
        Projet de fin d'ann√©e Quoridor
    </description>

    <property name="src" location="src/quoridor"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>
    <property name="doc" location="doc"/>
    <property name="test.src.dir" value="src/test"/>
    <property name="test.build.dir" value="build/test"/>
    <property name="reports" value="reports"/>

    <target name="init">
        <mkdir dir="${doc}"/>
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source " >
        <javac srcdir="${src}" destdir="${build}" includeantruntime="false"/>
    </target>

    <target name="javadoc" depends="init" description="genere la javadoc">
        <javadoc author="true" version="true" access="private" sourcepath="src" destdir="${doc}"/>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution" >
        <mkdir dir="${dist}/lib"/>
        <jar jarfile="${dist}/lib/Quoridor.jar" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="Launcher"/>
            </manifest>
        </jar>
    </target>

    <target name="clean"
            description="clean up" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
        <delete dir="${doc}"/>
        <delete dir="${reports}"/>
    </target>

    <path id="classpath.test">
        <pathelement location="ws/junit-4.13-beta-3.jar"/>
        <pathelement location="ws/hamcrest-core-1.3.jar"/>
        <pathelement location="${test.src.dir}"/>
    </path>

    <target name="test-compile" depends="compile">
        <mkdir dir="${build}"/>
        <javac srcdir="${test.src.dir}" destdir="${build}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <mkdir dir="${reports}"/>
        <junit printsummary="on" haltonfailure="yes" fork="false">
            <formatter type="xml"/>
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${build}"/>
            </classpath>
            <batchtest fork="yes" todir="${reports}">
                <fileset dir="${test.src.dir}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

</project>